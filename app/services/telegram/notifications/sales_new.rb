module Telegram
  module Notifications
    class SalesNew

      def initialize(sale)
        @sale = sale
        @store = sale.store
        @user = sale.store.users.admin
        @request = sale.store.requests.last
        @product_info = sale.products.first.requests.last
      end

      def call
        return if data_text.blank?

        notification = ::NewParsedData.with(source: @store, photo: photo_path,
                                            text: message_text,
                                            user_ids: @user.tg_users.pluck(:id))

        notification.deliver_later(@user)
      end

      private

      def message_text
        msg = []
        msg << "üÜî <b>–ú–∞–≥–∞–∑–∏–Ω:</b> <a href='#{@store.url}'> #{@request.data['name']} </a>"
        msg << "–ù–æ–≤–∞—è –ø—Ä–æ–¥–∞–∂–∞"
        msg << data_text.flatten

        msg.join("\n")
      end

      def data_text
        # ‚úÖ –í—ã–∫—É–ø [1] : 1 772 ‚ÇΩ
        # üìà –°–µ–≥–æ–¥–Ω—è: 1 –Ω–∞ 1 772 ‚ÇΩ
        # üÜî –ê—Ä—Ç: 139200844 (https : // www.wildberries.ru / catalog / 139200844 / detail.aspx? targetUrl = XS)
        # üìÅ –†—é–∫–∑–∞–∫–∏
        # üè∑ / BP - 01 (https : // www.wildberries.ru / catalog / 139200844 / detail.aspx? targetUrl = XS)
        # ‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥: 5.0
        # üí¨ –û—Ç–∑—ã–≤—ã: 4
        # üíµ –°–µ–≥–æ–¥–Ω—è —Ç–∞–∫–∏—Ö: 1 –Ω–∞ 1 772 ‚ÇΩ
        # üí∂ –í—á–µ—Ä–∞ —Ç–∞–∫–∏—Ö: 0
        # üíº –ö–æ–º–∏—Å—Å–∏—è: 23 %
        #   üåê –ö–æ–ª–µ–¥–∏–Ω–æ ‚Üí –ú–æ—Å–∫–æ–≤—Å–∫–∞—è
        # üì¶ 27 —à—Ç.—Ö–≤–∞—Ç–∏—Ç –Ω–∞ 22 –¥–Ω.

        text = @sale.api_data.map do |key, value|
          I18n.t("telegram.notifications.sale.new.#{key.underscore}", value: value)
        end.compact_blank

        text << "‚≠ê–†–µ–π—Ç–∏–Ω–≥: #{@product_info.rating}"
        text << "üí¨–û—Ç–∑—ã–≤—ã: #{@product_info.reviews_count}"
      end

      def photo_path
        @sale.products.last.photos.first.image.url
      end

    end
  end
end
