version: '3.3'

networks:
  web:
    driver: bridge

services:
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"

  app:
    depends_on:
      - db
      - worker
      - chrome
    build: .
    command: /bin/sh -c "bundle && puma -t 4:4 "
    stdin_open: true
    tty: true
    environment:
      - RAILS_ENV=production
      - BOOTSNAP=true
    volumes:
      - .:/app
      - rails_cache:/app/tmp/cache:delegated
      - /var/www/market_analytics/shared/certs:/root
      - bundle:/vendor/bundle:delegated
      - /home/frolin/.ssh:/root/.ssh
      - ${HOME}/.irbrc:/root/.irbrc
      - ${HOME}/.irb-history-market:/root/.irb-history
    env_file:
    - .env.prod
    ports:
      - "3333:3333"
      - "443:443"

  worker:
    depends_on:
      - redis
    build: .
    command: sh -c "bundle && bundle exec sidekiq"
    stdin_open: true
    tty: true
    environment:
      - RAILS_ENV=production
      - BOOTSNAP=true
    volumes:
      - .:/app
    env_file:
      - .env.prod
    networks:
      - default

  chrome:
    image: selenium/standalone-chrome-debug:latest
    # Debug version enables VNC ability
    environment:
      - NODE_MAX_INSTANCES=5
      - NODE_MAX_SESSION=5
      - RAILS_LOG_TO_STDOUT=true
    shm_size: 2g
    privileged: true
    volumes:
      - /dev/shm:/dev/shm
      - ./config/chrome_profile:/home/seluser/chrome_profile
    ports:
      - '4444:4444'
      - '5900:5900'
      # Bind selenium port & VNC port
    logging:
      driver: none
      # Disable noisy logs.

  redis:
    build:
      context: .
      dockerfile: Dockerfile-redis
    command: redis-server --include /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/data:/data:rw
#      - /opt/redis/etc/redis.conf:/usr/local/etc/redis/redis.conf
#      - /opt/redis/data:/data
    ports:
      - '6379:6379'
    restart: always

volumes:
  postgres:
  bundle:
  rails_cache: