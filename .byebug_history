c
result[product.requests.last.title]
c
next
result[product.requests.last.title]
result
c
result[product.requests.last.title].present?
c
result[product.requests.last.title] << { warehouse_name: stock['warehouseName'], quantity: stock['quantity'] }
result[product.requests.last.title]
result[product.requests.last.title].present?
c
result[product.requests.last.title].present?
product.requests.last.title
c
product.requests.last.title
c
product.requests.last.title
result[product.requests.last.title] << { warehouse_name: stock['warehouseName'], quantity: stock['quantity'] }
result[product.requests.last.title]
esult[product.requests.last.title]
result[product.requests.last.title].class
result[product.requests.last.title]
result[product.requests.last.title].present?
c
result[product.requests.last.title].present?
c
result[product.requests.last.title]
c
result[product.requests.last.title].merge({ warehouse_name: stock['warehouseName'], quantity: stock['quantity'] })
result[product.requests.last.title]
c
result[product.requests.last.title]
c
result[product.requests.last.title].merge({ warehouse_name: stock['warehouseName'], quantity: stock['quantity'] })
result[product.requests.last.title]
result[product.requests.last.title].present?
c
result[product.requests.last.title].merge({ warehouse_name: stock['warehouseName'], quantity: stock['quantity'] })
result[product.requests.last.title]
result[product.requests.last.title].present?
c
next
result[product.requests.last.title].present?
c
next
stock['warehouseName']
stock
c
ap barcode[1]
barcode[1].slice('supplierArticle')
barcode[1].slice
barcode[1].size
barcode[1]
c
barcode[1]
c
result
result.last
result
c
barcode[1]
c
barcode[1]
c
barcode[1]
c
hash
result
c
hash
next
barcode[1]
c
result
result.last
result
c
result
hash
c
group_stock.values.last
group_stock.values.lasty
group_stock.values.first
group_stock.values.size
group_stock.values
group_stock.keys
group_stock.kyes
group_stock
c
с
hash
hash[product.requests.last.title] = barcode[1].last
hash = {}
h
h[product.requests.last.title] = barcode[1].last
h[product.requests.last.title]
barcode[1].last
barcode[1]
barcode[1].to_h
h
product.requests.last.title
product = @store.products.find_by(barcode: barcode[0])
product = store.products.find_by(barcode: barcode[0])
product.requests.last.titleproduct = store.products.find_by(barcode: barcode[0])
product.request.last.title
@store.products.find_by(barcode: barcode[0])
store.products.find_by(barcode: barcode[0])
barcode[0]
barcode
product = store.products.find_by(barcode: barcode[0])
c
barcode[0]
ap stocks.first
ap stocks
stocks
barcode
c
response.body
c
next
c
e
next
c
stocks_data.result
stock_data.result
c
stock_data.result
stock_data = stocks(DateTime.current.advance(days: -1))
stocks_data.result
stocks_data
stocks_data.result
c
stock_data.result
stock_data = stocks(date_from)
stocks_data.result
stocks_data.result.present?
c
next
ap stocks = last_stock_data.group_by { |stock| stock['barcode'] }
stocks = last_stock_data.group_by { |stock| stock['barcode'] }
stocks = last_stock_data.group_by { |stock| stock.api_data['barcode'] }
last_stock_data
ast_stock_data
c
new_stock
new_stock = store.stocks.create(api_data: stock)
stock
next
stock = stocks_data.result.select { |product| product['quantity'] > 0 }
stocks_data.result
c
stocks_data.result
stocks_data
c
stocks_data
next
c
e
next
stock.size
next
stocks_data.result
stocks_data
l
c
stocks
c
stocks_data.result
stocks_data
stocks_data.result
stocks_data.result'
stocks_data
stocks_data.result
c
stocks_data.result
stocks_data
stocks_data.errors
stocks_data
stocks_data.result
stocks_data
stocks_data.result
stock
c
stocks = @data.select { |data| data['quantity'] > 0 }
                      .group_by { |stock| stock.api_data['barcode'] }
ap  @data.select { |data| data['quantity'] > 0 }.group_by { |stock| stock.api_data['barcode'] }
ap  @data.select { |data| data['quantity'] > 0 }.group_by { |stock| stock.api_data[:barcode] }
ap  @data.select { |data| data['quantity'] > 0 }
ap  @data.select { |data| data['quantity'] > 0 }.group_by { |stock| stock.product.requests.last.title }
ap  @data.select { |data| data['quantity'] > 0 }.group_by {|stock| stock.product.id  }
sap  @data.select { |data| data['quantity'] > 0 }.group_by {|stock| stock.product.id  }
stocks = @data.select { |data| data['quantity'] > 0 }.group_by {|stock| stock.product.id  }
stocks = @data.select { |data| data['quantity'] > 0 }.size
stocks = @data.select { |data| data['quantity'] > 0 }
@data.last.product
@data.last
@data
@data.joins(:products)
@data.first
l
@store.first
store.first
@data.last
@data
c
@data.first
@data
stocks = @data.select { |data| data[:stock]['quantity'] > 0 }
c
stocks.first.l
stocks = @data.select { |data| data[:stock]['quantity'] > 0 }
products = @data.select { |data| data[:stock]['quantity'] > 0 }.size
products = @data.select { |data| data[:stock]['quantity'] > 0 }
@data.size
products = @data.select { |data| data[:stock]['quantityFull'] > 0 }.size
products = @data.select { |data| data[:stock]['quantityFull'] > 0 }
@data.last[:stock]
@data.last
products = @data.select { |data| data[:product][:quantity] }
c
ap Product.last.stocks
Product.last.stocks
Product.last
ap @data.first[:stock]
ap @data.group_by {|d| d[:stock]['warehouseName'] }
@data.group_by {|d| d[:stock]['warehouseName'] }
@data.first[:stock]["warehouseName"]
@data.first[:stock]["wareHouseName"]
@data.first[:stock]["warehouse"]
@data.first[:stock]
@data.first
@data.fist
products.map.with_index do |data, i|
          product = data[:product].decorate
          "#{i + 1}. #{product.requests.last.title} - #{data[:product].wb_quantity} шт."
        end.join("\n")
products = @data
@data.first[:product]
@data.first[:product].name
@data.first.name
@data.first
@data.size
products = @data.uniq { |data| data[:product].name }
@data
c
product
c
product
c
product
next
product
c
